.box1{
    .box2{
        color: red;
    }    
    // 后代元素选择器 这么写：
    >.box3{
        color: royalblue;
    }
    // 如何写一个自己的hover    
    // &就表示父级元素。
    &:hover{
        color: salmon;
    }
    div &{
        color: salmon;
    }

}

// 扩展关键字
// :extend()

.p1{
    width: 100px;
    height: 100px;
}
// .p2{
//     width: 100px;
//     height: 100px;
//     color: red;
// } 
// 可以像下面这样直接用扩展关键字， 
// 这样的话， 相同会被分组选择器， 独有的会单独声明出来， 针不戳
.p2:extend(.p1){
    color: red;
}
// 还有下面这种 ，叫混合， 直接把p1的样式在这里进行引用 相当于把把人家样式复制在这里了。 
// 但是我们一般不这么用， 因为这还是多写了一遍样式。  尽量用分组多好。 
.p3{
    .p1();
}
//mixin 混合 一般这么用 
// 函数 ， 一个代码块一样， 定义着一些通用的样式， 然后被别人引用
.p4(){
    width: 12px;
    height: 12px;
}
.p5{
    .p4();
    //.p4; 也行
}
// 实际上 mixin函数， 也不向上面那么用 ， 他是一个函数， 
// 作为一个工厂函数 ，可以传参数， 生成代码来
// 函数可以写默认值， @w:100px , 这时，如果不传 ，那么就是默认值了， 
.createBox(@w, @h , @bgc){
    width: @w;
    height: @h;
    background-color: @bgc;
}

box_1{
    
    // 这种是有参数顺序的调用函数， 
    // .createBox(200px, 100px,  #baf);
    // 还有一种是咩有参数顺序的调用。 
    .createBox(@w:1px , @h :2px ,@bgc: #fff);
}

